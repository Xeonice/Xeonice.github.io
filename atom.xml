<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Helve&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-16T07:52:18.778Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Helvetica.D</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第三章--可视化格式模型</title>
    <link href="http://yoursite.com/2017/10/14/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%8F%AF%E8%A7%86%E5%8C%96%E6%A0%BC%E5%BC%8F%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/2017/10/14/第三章-可视化格式模型/</id>
    <published>2017-10-14T09:54:40.000Z</published>
    <updated>2017-11-16T07:52:18.778Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="盒模型概述"><a href="#盒模型概述" class="headerlink" title="盒模型概述"></a>盒模型概述</h1><p>盒模型是 CSS 的基石之一，它指定元素如何显示以及（在某种程度上）如何相互交互。页面上的每个元素被看作一个矩形框，这个框由元素的内容，内边距，边框和外边距组成。</p><h2 id="内边距"><a href="#内边距" class="headerlink" title="内边距"></a>内边距</h2><p>内边距常用用于在内容周围创建一个隔离带，使内容不会与背景混在一起。</p><h2 id="外边距"><a href="#外边距" class="headerlink" title="外边距"></a>外边距</h2><p>外边距是透明的，一般使用它控制元素之间的间隔。</p><h3 id="盒模型示意图"><a href="#盒模型示意图" class="headerlink" title="盒模型示意图"></a>盒模型示意图</h3><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-1.png" alt="3-1"></p><p>内边距，边框和外边距都是可选的，默认值为0。但是，许多元素将由用户代理样式表设置外边距和内边距。可以通过将元素的 margin 或 padding 设置为 0 来覆盖这些浏览器样式。这可以分别进行，也可以使用通用选择器对所有元素进行设置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">* &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>请记住，这种技术不区分元素，所以它对 option 等元素有不利影响。因此，使用全局把内边距和外边距显式地设置为 0 可能更安全。</strong></p><p>在 CSS 中，width 和 height 指的是内容区域的宽度和高度。增加内边距、边框和外边距不会影响内容区域的尺寸，但是会增加元素框的总尺寸。假设框的每个边上有 10 像素的外边距和 5 像素的内边距，如果希望这个框达到 100 像素宽，就需要将内容的宽度设置为 70 像素。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"> <span class="selector-id">#myBox</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</div><div class="line"> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>示意图如下：</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-2.png" alt="3-2"></p><h1 id="IE-和盒模型"><a href="#IE-和盒模型" class="headerlink" title="IE 和盒模型"></a>IE 和盒模型</h1><p>令人遗憾的是，IE 的早期版本，包括 IE6，在混杂模式中使用自己的非标准盒模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度总和。例如，前面的示例，在 IE 5.x 中框的总宽度只有 90 像素。这是因为 IE 5.x 认为每个边上 5 像素的内边距是 70 像素的宽度额度一部分，而不是在宽度之外附加的。</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-3.png" alt="3-3"></p><p>幸运的是，有几个方法可以解决这个问题，这些方法的细节可以在第九章找到。但是，目前最好的解决方案是回避这个问题。也就是，不要给元素添加具有指定宽度的内边距，而是尝试将内边距或外边距添加到元素的父元素或子元素。</p><h1 id="外边距叠加"><a href="#外边距叠加" class="headerlink" title="外边距叠加"></a>外边距叠加</h1><p>当一个元素出现在另一个元素上面时，第一个元素的底外边距与第二个元素的顶外边距发生叠加。</p><p>叠加之前</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-4.png" alt="3-4"></p><p>叠加之后</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-5.png" alt="3-5"></p><p>当一个元素包含在另一个元素中时（假设没有内边距或边框将外边距分隔开），它们的顶和或底外边距也会发生叠加。</p><p>叠加之前：</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-7.png" alt="3-7"></p><p>叠加之后：</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-8.png" alt="3-8"></p><p>外边距甚至可以与本身发生叠加。假设有一个空元素，它有外边距，但是没有边框或内边距。这种情况下，顶外边距与底内边距就碰到了一起，它们会发生叠加。</p><p>叠加之前：</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-9.png" alt="3-9"></p><p>叠加之后：</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-10.png" alt="3-10"></p><p>如果这个外边距碰到另一个元素的外边距，它还会发生叠加。</p><p>叠加之前：</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-11.png" alt="3-11"></p><p>叠加之后：</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-12.png" alt="3-12"></p><p>这就是一系列空的段落元素占用的空间非常小的原因，因为它们的所有外边距都叠加到一起，形成一个小的外边距。</p><p>外边距叠加的意义在于：防止段落之间的空间是页面顶部的两倍。如果发生外边距叠加，段落之间的顶外边距和底外边距就叠加在一起，这样各处的距离就一致了。<br><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-13.png" alt="3-13"></p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-14.png" alt="3-14"></p><p>注意：只有普通文档流中块框（block）的垂直外边距才会发生外边距叠加。行内框（inline）、浮动框（float）或绝对定位框（position：absolute）之间的外边距不会叠加。</p><h1 id="定位概述"><a href="#定位概述" class="headerlink" title="定位概述"></a>定位概述</h1><h2 id="可视化格式模型"><a href="#可视化格式模型" class="headerlink" title="可视化格式模型"></a>可视化格式模型</h2><p>p h1 或 div 元素常常被称为块级元素。这意味着这些元素显示为一些内容，即“块框”（display: block）。与之相反，strong 和 span 等元素被称为行内元素，因为它们的内容显示在行中，即“行内框”（display: inline）。</p><p>还可以通过将 display 设置为 none，让生成的元素根本没有框。这样，这个框的内容就不再显示，不占用文档中的空间。</p><h3 id="定位机制"><a href="#定位机制" class="headerlink" title="定位机制"></a>定位机制</h3><p>CSS 中有 3 种基本的定位机制：普通流，浮动和绝对定位。除非专门指定，否则所有框都会在普通流中进行定位。</p><h3 id="块级框与行级框特性"><a href="#块级框与行级框特性" class="headerlink" title="块级框与行级框特性"></a>块级框与行级框特性</h3><p>块级框从上至下一个接一个的垂直排列，框之间的垂直距离由框的垂直外边距计算出来。<br>行内框在一行中水平排列，可以使用水平内边距、边框和外边距。但是，垂直内边距、边框和外边距不影响行内框的高度。同样，在行内框上设置显式的高度或宽度也没有影响。<br>行框的高度总是足以容纳它包含的所有行内框，但是，设置行高可以增加这个框的高度。因此，修改行内框尺寸的唯一方法就是修改行高 / 水平内边距、边框和外边距</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-15.png" alt="3-15"></p><p>CSS 2.1 允许把元素更改为 display: inline-block。这个声明让元素像行内框一样水平依次排列，但是，框的内容依旧符合块级框的行为，可以设置垂直内边距、边框和外边距。现在，FireFox 3.0 、IE8、Safari 和 Opera 的最新版本都支持 inline-block。</p><h3 id="匿名块框-行框"><a href="#匿名块框-行框" class="headerlink" title="匿名块框/行框"></a>匿名块框/行框</h3><p>将一些文本添加到一个块级元素（比如 div ）的开头时，即使没有把这些元素定义为块级元素，它也会被当成块级元素对待</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">   sometext</div><div class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some more Text<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!-- 在 p 之前添加的都被称为匿名块框 --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </div></pre></td></tr></table></figure><p>这种情况下的框被称为匿名块框，因为它不与专门定义的元素相关联。<br>行内框情况类似，无法直接对匿名块或行框运用样式，除非利用不常见的 :first-line 伪元素。</p><h2 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h2><p>可以通过设置垂直或水平位置，让这个元素“相对于”它的起点移动。如果将 top 设置为 20 像素，那么框就会出现在原位置顶部下面 20 像素的地方。如果将 left 设置为 20 像素，那么会在元素左边创建 20 像素的空间，也就是将元素向右移动。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#myBox</span>&#123;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">left</span>: <span class="number">20px</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-16.png" alt="3-16"></p><p>注意：使用相对定位时，无论是否移动，元素都会占据原有的空间。因此，移动元素会导致覆盖其他框。</p><h2 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h2><p>相对定位实际上被看做普通流定位模型的一部分，因为元素的位置是相对于它在普通流中的位置的。与之相反，绝对定位使元素的位置与文档流无关，因此不占据空间。普通文档流中的其他元素定位时就像绝对定位的元素不存在一样。</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-18.png" alt="3-18"></p><p>绝对定位元素的位置是相对于距离它最近的那个已定位的祖先元素确定的。如果没有已定位的祖先元素，那么它的位置是相对于初始块的。根据浏览器不同，初始块可能是画布或 HTML 元素。</p><p>与相对定位一样，绝对定位的框可以从它的包含块向上、下、左、右移动。</p><p>因为绝对定位的框与文档流无关，因此它们可以覆盖页面上的其他元素。可以通过设置 z-index 来控制这些框的叠放顺序，z-index 值越高，框的位置就越高。</p><p>相对于最近的已定位祖先元素来定位绝对定位的元素，能够实现一些非常有意思的效果。例如，假设希望让一个文本段落对准一个大框的右下角，只需对包含框进行相对定位，然后相对于这个框对段落进行绝对定位：</p><p></p><p data-height="308" data-theme-id="0" data-slug-hash="wPqVKE" data-default-tab="css,result" data-user="Xeonice" data-embed-version="2" data-pen-title="wPqVKE" class="codepen">See the Pen <a href="https://codepen.io/Xeonice/pen/wPqVKE/" target="_blank" rel="external">wPqVKE</a> by DouglasDong (<a href="https://codepen.io/Xeonice" target="_blank" rel="external">@Xeonice</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p><script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><p>注意：因为绝对定位的元素和文档流无关，所以它们不会影响普通流中的框。如果扩大绝对定位的框（例如：增加字号），周围的框不会重新定位。因此，尺寸的任何改变都会导致绝对定位的框产生重叠，从而破坏布局。</p><h3 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h3><p>固定定位是绝对定位的一种，差异在于固定元素的包含块是 viewport，这使得我们能够创建出总是出现在窗口相同位置的浮动元素。例如侧边栏。</p><p>不过，IE 6 和更低版本不支持固定定位。IE 7 部分支持这个属性，但是实现中有许多 bug，为了解决这个问题，Jonathan Snook 使用 Javascript 在 IE 中重现了这个效果。</p><h1 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h1><p>最后一种定位模型是浮动模型。浮动的框可以左右移动，直到它的外边缘碰到包含框或另一个浮动框的边缘，因为浮动框不包括在文档的普通流中，所以文档的普通流中的块框表现得就像浮动框不存在一样。</p><p>如下所示，当把框 1 向右浮动时，它脱离文档并向右浮动，直到它的右边框碰到包含框的右边缘。</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-19.png" alt="3-19"></p><p>在下图中，当把框 1 向左浮动时，它脱离文档流并且向向左移动，因为它不再处于文档流中，所以它不占空间。实际上覆盖住了框 2 ，使框 2 从视图内消失。</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-20.png" alt="3-20"></p><p>如果包含块太窄，不足以容纳 3 个浮动元素水平排列，那么其他浮动块向下移动，直到有足够空间的地方。如果浮动元素的高度不同，那么当它们向下移动时可能被其他浮动元素“卡住”。</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-21.png" alt="3-21"></p><h2 id="行框和清除浮动"><a href="#行框和清除浮动" class="headerlink" title="行框和清除浮动"></a>行框和清除浮动</h2><p>浮动会让元素脱离文档流，周围的框会表现的和浮动元素不存在一样，但是，行框的内容会围绕浮动元素。</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-22.png" alt="3-21"></p><p>为避免行框浮动在浮动元素周围，需要用到  clear 属性，clear 属性的值可以是 left, right, both, 和 none。它表示框的哪些边不应该挨着浮动框。<br>注：clear 并不是自动地抵消前面的浮动，而是在元素边上加上足够的外编剧。</p><p>对元素进行清理实际上为前面的浮动元素留出了垂直空间。</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-23.png" alt="3-23"></p><p>clear 让周围的元素为浮动元素留出了空间，解决了前面看到的问题 — 垂直高度的改变不影响周围的元素，从而破坏了设计。</p><p>希望让图片浮动到文本块的左边时</p><p>因为浮动元素脱离了文档流，所以包围图片和文本的 div 不占据空间。<br>浮动元素脱离了文档流，使包含图片和文本的 div 不占空间，使元素在视觉上包括浮动元素的方法是：在这个元素中的某个地方运用 clear 。本例中添加在了最后一个段落下面。</p><p><img src="http://7xrad6.com1.z0.glb.clouddn.com/3-24.png" alt="3-24"></p><p>还可以选择浮动容器 div</p><p></p><p data-height="301" data-theme-id="0" data-slug-hash="vWJoxp" data-default-tab="css,result" data-user="Xeonice" data-embed-version="2" data-pen-title="vWJoxp" class="codepen">See the Pen <a href="https://codepen.io/Xeonice/pen/vWJoxp/" target="_blank" rel="external">vWJoxp</a> by DouglasDong (<a href="https://codepen.io/Xeonice" target="_blank" rel="external">@Xeonice</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p><script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><p>这也会产生我们想要的结果。但是，下一个元素会受到这个浮动元素的影响。为了解决这个问题，有些人选择浮动布局中的几乎所有东西，然后使用合适的元素（常常是站点的页脚）对这些浮动元素进行清理。这有助于减少或消除不必要的标记。但是，浮动会变得复杂，而且一些老式浏览器在处理有许多浮动元素布局时有困难。因此，许多人喜欢添加少量的额外标记。</p><p>利用css生成的内容对浮动元素进行处理：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clear</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">"."</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">visibility</span>: hidden;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">clear</span>: both;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>css方法，结合使用：after伪类和内容声明在指定的现有内容的末尾添加新的内容。</p><p>IE6和更低版本上使用需要 Holly hack，迫使 IE5和 IE6 应用布局<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clear</span>&#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">&#125;</div><div class="line"><span class="comment">/* Holly Hack Targets IE Win only \ */</span></div><div class="line">* <span class="selector-tag">html</span> <span class="selector-class">.clear</span> &#123;<span class="attribute">height</span>: <span class="number">1%</span>;&#125;</div><div class="line"><span class="selector-class">.clear</span> &#123;<span class="attribute">display</span>: block;&#125;</div><div class="line"><span class="comment">/* End Holly Hack */</span></div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;盒模型概述&quot;&gt;&lt;a href=&quot;#盒模型概述&quot; class=&quot;headerlink&quot; title=&quot;盒模型概述&quot;&gt;&lt;/a&gt;盒模型概述&lt;/h1&gt;&lt;p&gt;盒模型是 CSS
      
    
    </summary>
    
      <category term="精通CSS-高级Web标准解决方案" scheme="http://yoursite.com/categories/%E7%B2%BE%E9%80%9ACSS-%E9%AB%98%E7%BA%A7Web%E6%A0%87%E5%87%86%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>第二章--为样式找到应用目标</title>
    <link href="http://yoursite.com/2017/10/03/%E7%B2%BE%E9%80%9ACSS%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E4%B8%BA%E6%A0%B7%E5%BC%8F%E6%89%BE%E5%88%B0%E5%BA%94%E7%94%A8%E7%9B%AE%E6%A0%87/"/>
    <id>http://yoursite.com/2017/10/03/精通CSS笔记-第二章-为样式找到应用目标/</id>
    <published>2017-10-02T18:40:06.000Z</published>
    <updated>2017-10-14T02:43:32.683Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="常用的选择器"><a href="#常用的选择器" class="headerlink" title="常用的选择器"></a>常用的选择器</h1><p>最常用的选择器类型是 <strong>类型选择器</strong> 和 <strong>后代选择器</strong> 。</p><h2 id="类型选择器"><a href="#类型选择器" class="headerlink" title="类型选择器"></a>类型选择器</h2><p>有时被称为 <em>元素选择器</em> 或 <em>简单选择器</em> 是用来寻找特定类型的选择器，例如，我们想要选择网页中所有的 <code>&lt;p&gt;</code> 或 <code>&lt;h1&gt;</code> ，只需按照如下示例进行指定。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">color</span>: black;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">h1</span> &#123;</div><div class="line">    <span class="attribute">font-weight</span>: bold;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h2><p>可用来寻找特定元素或元素组的后代。后代选择器由其他两个选择器中间的空格表示。在此事例中，css 属性仅影响 <code>blockquote</code> 的后代的 <code>&lt;p&gt;</code> 元素。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">blockquote</span> <span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">padding-left</span>: <span class="number">2em</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>要想寻找更特定的元素，可以使用 <strong>ID选择器</strong> 和 <strong>类选择器</strong> 。顾名思义，这两种选择器用于寻找那些具有指定 <em>ID</em> 或 <em>类名</em> 的元素。下方示例，第一条选择 <code>ID = intro</code> 的元素，第二条选择 <code>class = data-posted</code> 的元素。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#intro</span> &#123;</div><div class="line">   <span class="attribute">font-weight</span>: bold;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.date-posted</span> &#123;</div><div class="line">   <span class="attribute">color</span>: <span class="number">#ccc</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>注意：如果你发现自己在文档中添加了许多不必要的类，那么这可能是文档结构不合理的一个警告信号。<strong>因此，不要给这些元素指定不同的类，而应将一个 <em>类</em> 或 <em>ID</em> 应用于它们的祖先，然后使用后代选择器定位它们。</strong></p><h1 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h1><p>用于根据 <em>DOM</em> 流外的条件对元素应用样式，例如表单元素或链接的状态。示例如下：</p><p></p><p data-height="265" data-theme-id="0" data-slug-hash="QqqbKY" data-default-tab="css,result" data-user="Xeonice" data-embed-version="2" data-pen-title="伪类" class="codepen">See the Pen <a href="https://codepen.io/Xeonice/pen/QqqbKY/" target="_blank" rel="external">伪类</a> by DouglasDong (<a href="https://codepen.io/Xeonice" target="_blank" rel="external">@Xeonice</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p><script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><p><code>:link</code> 和 <code>:visited</code> 称为链接伪类， 只能应用于锚元素。 <code>:hover</code> <code>:active</code> 和 <code>:focus</code>称为动态伪类，理论上可应用于任何元素。 <strong>注意：<em>IE6</em> 只注意应用于锚链接的 <code>:active</code> 和 <code>:hover</code> 选择器，完全忽略 <code>:focus</code> 。<em>IE7</em> 在任何元素上都支持 <code>:hover</code> ，但是忽略 <code>:active</code> 和 <code>:focus</code>。</strong></p><h1 id="通用选择器"><a href="#通用选择器" class="headerlink" title="通用选择器"></a>通用选择器</h1><p>通用选择器就像是通配符，作用是对页面上所有的元素应用样式。例如，可以使用下列代码清除每个元素上默认的 <code>padding</code> 和 <code>margin</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">* &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">   <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="高级选择器"><a href="#高级选择器" class="headerlink" title="高级选择器"></a>高级选择器</h1><p><em>CSS 2.1</em> 和 <em>CSS 3</em> 有其他很多有用的选择器，不过 <em>IE6</em> 和更低版本不支持，好在创建 CSS 时考虑到了向后兼容性，如果浏览器不理解某个选择器，那么它会忽略整个规则。<strong>但是要记住，在对于站点功能或布局很重要的任何元素上，都应该避免使用这些高级选择器。</strong></p><h2 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h2><p>子选择器只选择元素的直接后代，即子元素。示例如下：</p><p></p><p data-height="265" data-theme-id="0" data-slug-hash="EwpYxZ" data-default-tab="html,result" data-user="Xeonice" data-embed-version="2" data-pen-title="EwpYxZ" class="codepen">See the Pen <a href="https://codepen.io/Xeonice/pen/EwpYxZ/" target="_blank" rel="external">EwpYxZ</a> by DouglasDong (<a href="https://codepen.io/Xeonice" target="_blank" rel="external">@Xeonice</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p><script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><p><strong>注意：<em>IE7</em> 中存在 bug，如果父元素和子元素之间有 HTML 注释，就会出问题。</strong></p><p><em>IE6</em> 和更低版本中，可以使用通用选择器模拟子选择器的效果。即：先在所有后代上应用你希望子元素具有的样式。然后，使用通用选择器覆盖子元素的后代上的样式。例如，在 <em>IE6</em> 中实现子选择器效果：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#nav</span> <span class="selector-tag">li</span> &#123;</div><div class="line">   <span class="attribute">background</span>: <span class="built_in">url</span>(folder.png) no-repeat left top;</div><div class="line">   <span class="attribute">padding-left</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#nav</span> <span class="selector-tag">li</span> * &#123;</div><div class="line">   <span class="attribute">background</span>: none;</div><div class="line">   <span class="attribute">padding-left</span>: <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="相邻同胞选择器"><a href="#相邻同胞选择器" class="headerlink" title="相邻同胞选择器"></a>相邻同胞选择器</h2><p>相邻同胞选择器可用于定位同一个父元素下某个元素之后的元素。可以使用相邻同胞选择器让顶级标题后面的第一个段落显示为粗体，灰色，并且字号比后续段落略微大一点。</p><p><iframe height="265" scrolling="no" title="相邻同胞选择器" src="//codepen.io/Xeonice/embed/rGrBMj/?height=265&theme-id=dark&default-tab=html,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/Xeonice/pen/rGrBMj/" target="_blank" rel="external">相邻同胞选择器</a> by DouglasDong (<a href="https://codepen.io/Xeonice" target="_blank" rel="external">@Xeonice</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.<br></iframe><br><strong>注意：与子选择器一样，如果在目标元素之间有注释，这在 <em>IE7</em> 中也会出问题。</strong></p><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><p>根据某个属性是否存在或属性的值来寻找元素。<br>例如：对具有 <em>title</em> 属性的 <em>acronym</em>元素应用与其他元素不同的样式：</p><p></p><p data-height="265" data-theme-id="dark" data-slug-hash="yzqBbJ" data-default-tab="html,result" data-user="Xeonice" data-embed-version="2" data-pen-title="属性选择器" class="codepen">See the Pen <a href="https://codepen.io/Xeonice/pen/yzqBbJ/" target="_blank" rel="external">属性选择器</a> by DouglasDong (<a href="https://codepen.io/Xeonice" target="_blank" rel="external">@Xeonice</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p><script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><p>实际运用：使用 <em>rel</em> 属性值 <em>nofollow</em> 链接的站点无法从 Google 获得评级收益。以下规则在这种链接旁边显示一个图像，以此表示不推荐这个目标站点：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span><span class="selector-attr">[rel="nofollow"]</span>&#123;</div><div class="line">   <span class="attribute">background</span>: <span class="built_in">url</span>(nofollow.gif) no-repeat right center;</div><div class="line">   <span class="attribute">padding-right</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>注意：包括 IE7 的现代浏览器都支持这些选择器。然而，由于 IE6 不支持属性选择器，可以利用它们对 IE6 应用一种样式，对更符合标准的浏览器应用另一种样式。例如，Andy Clarke 利用这种技术为 IE6 提供网站的黑白版本，为其他所有浏览器提供彩色版本：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#header</span> &#123;</div><div class="line">   <span class="attribute">background</span>: <span class="built_in">url</span>(branding-bw.png) repeat-y left top;</div><div class="line">&#125;</div><div class="line"><span class="selector-attr">[id="header"]</span>&#123;</div><div class="line">   <span class="attribute">background</span>: <span class="built_in">url</span>(branding-color.png) repeat-y left top;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="层叠和特殊性"><a href="#层叠和特殊性" class="headerlink" title="层叠和特殊性"></a>层叠和特殊性</h1><h2 id="层叠"><a href="#层叠" class="headerlink" title="层叠"></a>层叠</h2><p>层叠采用以下重要度次序</p><ul><li>标有 <em>!important</em> 的用户（使用浏览器的人）样式。</li><li>标有 <em>!important</em> 的作者（开发者）样式。</li><li>作者样式。</li><li>用户样式。</li><li>浏览器/用户代理应用的样式</li></ul><p>然后根据选择器的特殊性决定规则的次序。<strong>具有更特殊选择器的规则优先于具有一般选择器的规则。如果两个选择器的特殊性相同，那么后定义的规则更优先。</strong></p><h2 id="特殊性"><a href="#特殊性" class="headerlink" title="特殊性"></a>特殊性</h2><p>选择器的特殊性分成4个成分等级：a, b, c 和 d。</p><ul><li>如果样式是行内样式，那么 a = 1；</li><li>b 等于 <strong>ID选择器</strong> 的总数。</li><li>c 等于类，伪类和属性选择器的数量。</li><li>d 等于类型选择器和伪元素选择器的数量。</li></ul><table><thead><tr><th style="text-align:left">选择器</th><th style="text-align:center">特殊性</th><th style="text-align:center">以10为基数的特殊性</th></tr></thead><tbody><tr><td style="text-align:left">Style=””</td><td style="text-align:center">1,0,0,0</td><td style="text-align:center">1000</td></tr><tr><td style="text-align:left">#wrapper #content {}</td><td style="text-align:center">0,2,0,0</td><td style="text-align:center">200</td></tr><tr><td style="text-align:left">#content .datePosted {}</td><td style="text-align:center">0,1,1,0</td><td style="text-align:center">110</td></tr><tr><td style="text-align:left">div#content {}</td><td style="text-align:center">0,1,0,1</td><td style="text-align:center">101</td></tr><tr><td style="text-align:left">#content {}</td><td style="text-align:center">0,1,0,0</td><td style="text-align:center">100</td></tr><tr><td style="text-align:left">p.comment dateposted {}</td><td style="text-align:center">0,0,2,1</td><td style="text-align:center">21</td></tr><tr><td style="text-align:left">p.comment {}</td><td style="text-align:center">0,0,1,1</td><td style="text-align:center">11</td></tr><tr><td style="text-align:left">div p {}</td><td style="text-align:center">0,0,0,2</td><td style="text-align:center">2</td></tr><tr><td style="text-align:left">p {}</td><td style="text-align:center">0,0,0,1</td><td style="text-align:center">1</td></tr></tbody></table><p>总结：用 <em>style</em> 属性编写的规则总是比其他任何规则特殊。具有 ID选择器 的规则比没有 ID 选择器的规则特殊，具有类选择器的规则比只有类型选择器的规则特殊。最后，如果两个规则的特殊性相同，那么后定义的规则优先。</p><p>例如：假设有以下这两组规则，你认为两个标题会是什么颜色的？</p><p></p><p data-height="265" data-theme-id="dark" data-slug-hash="mBjbZN" data-default-tab="html,result" data-user="Xeonice" data-embed-version="2" data-pen-title="特殊性" class="codepen">See the Pen <a href="https://codepen.io/Xeonice/pen/mBjbZN/" target="_blank" rel="external">特殊性</a> by DouglasDong (<a href="https://codepen.io/Xeonice" target="_blank" rel="external">@Xeonice</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p><script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><p>令人吃惊的是，两个标题都是灰色的，第一个选择器由两个 ID选择器 组成，因此它具有最高的特殊性。</p><h3 id="在样式表中使用特殊性"><a href="#在样式表中使用特殊性" class="headerlink" title="在样式表中使用特殊性"></a>在样式表中使用特殊性</h3><p>在编写 CSS 时特殊性非常有用，因为它可以对一般元素应用一般样式，然后在更特殊的元素上覆盖它们。例如，如果你希望站点上大多数文本是黑色的，但介绍说明文本是灰色的，可以这样做</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>: black&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.intro</span> &#123;<span class="attribute">color</span>: gray&#125;</div></pre></td></tr></table></figure><p>为了避免过度混乱，我尽量保持一般性样式非常一般，特殊样式尽可能特殊，这样就不需要覆盖特殊样式了。如果发现不得不多次覆盖一般样式，那么从更一般的规则中删除需要覆盖的声明，并且将它显式运用于需要它的每个元素，这样可能比较简单。</p><h3 id="在主体标签上添加类或者ID"><a href="#在主体标签上添加类或者ID" class="headerlink" title="在主体标签上添加类或者ID"></a>在主体标签上添加类或者ID</h3><p>一种有意思的特殊性用法是在主体（body）标签上应用 <em>类</em> 或 <em>ID</em> 。这样做以后，就可以根据页面或在站点范围内覆盖样式。例如，如果希望新的页面具有特殊的布局，那么就可以在主页的主题元素上添加一个类名，并且使用它覆盖样式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span><span class="selector-class">.news</span> &#123;</div><div class="line">   <span class="comment">/* do some stuff */</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"news"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>My, what a lovely body you have.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure><p>有时候，在特殊页面上需要覆盖这些样式，比如在新闻存档页面上。在这种情况下，可以在主体标签上添加 <em>ID</em> 来标识这个页面。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span><span class="selector-class">.news</span> &#123;</div><div class="line">   <span class="comment">/* do some stuff */</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">body</span><span class="selector-id">#archive</span> &#123;</div><div class="line">   <span class="comment">/* do some stuff */</span></div><div class="line">&#125;   </div></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">"archive"</span> <span class="attr">class</span>"<span class="attr">news</span>"&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>My, what a lovely body you have.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span> </div></pre></td></tr></table></figure><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><p>继承是一个非常容易理解的概念。<strong>应用样式的元素的后代会继承样式的某些属性，比如颜色和字号。</strong><br>例如：如果将主体元素的文本颜色设置为黑色，那么主体元素的所有后代也显示黑色的文本。对于字号，也是这样的。如果将主体的字号设置为 <em>1.4 em</em>，那么页面上的所有内容应该会继承这个字号。</p><p><strong>“应该会” 是因为 Windows 的 <em>IE</em> 和 <em>Netscape</em> 在继承表格的字号方面有问题。为了解决这个问题，必须制定表格应该继承字号，或者在表格上单独设置。</strong></p><p>恰当地使用继承也可以减少代码中选择器的数量和复杂性。但是，如果大量元素继承各种样式，那么判断样式的来源就会变得困难。</p><h1 id="规划、组织和维护样式表"><a href="#规划、组织和维护样式表" class="headerlink" title="规划、组织和维护样式表"></a>规划、组织和维护样式表</h1><p>管理代码的方法，包括按逻辑对样式进行分组以及通过添加注释使代码更容易阅读</p><h2 id="对文档应用样式"><a href="#对文档应用样式" class="headerlink" title="对文档应用样式"></a>对文档应用样式</h2><ol><li>将样式放在 <em>style</em> 标签之间，从而直接在文档头上添加样式。但是，这不是对文档应用样式的好方法。如果要创建使用相同样式的另一个页面，那么就不得不在新页面上复制 CSS 。如果以后要修改样式，那么就不得不在两处都进行修改。</li><li>将样式放在一个或多个外部样式表中，附加到网页上的方法有两种。可以链接它们，也可以导入它们。<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"/css/basic.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> /&gt;</span> <span class="comment">&lt;!-- 链接 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">&lt;!--</span></div><div class="line"><span class="css">@<span class="keyword">import</span> url(<span class="string">"/css/advanced.css"</span>);</span></div><div class="line"><span class="undefined">--&gt;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> <span class="comment">&lt;!-- 导入 --&gt;</span></div></pre></td></tr></table></figure></li><li>可以从 HTML 页面链接基本样式表，然后将复杂的样式表导入这个样式表。<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@import url(/css/layout.css);</div><div class="line">@import url(/css/typography.css);</div><div class="line">@import url(/css/color.css);</div><div class="line"><span class="comment">&lt;!-- 导入 --&gt;</span></div></pre></td></tr></table></figure>注意：最新的浏览器基准测试已经表明，导入样式表比链接样式表慢。</li><li>使用多个 CSS 时，还有两个与速度相关的问题。首先：<strong>多个文件会导致从服务器发送更多数据包，数据包的数量会影响下载时间</strong>。另外：<strong>浏览器只能同时从一个域名下载数量有限的文件。对于老式浏览器，这个数字是两个，对于新式浏览器，这个数字是八个。</strong>因此，使用结构良好的单一 CSS 文件能有效提高下载速度。</li></ol><h2 id="设计代码的结构"><a href="#设计代码的结构" class="headerlink" title="设计代码的结构"></a>设计代码的结构</h2><p>为了方便维护，最好把整个样式表分为几大块，通常的文档结构如下所示：</p><ul><li>一般性样式<ul><li>主体样式</li><li>reset 样式</li><li>链接</li><li>标题</li><li>其他元素</li></ul></li><li>辅助样式<ul><li>表单</li><li>通知和错误</li><li>一致的条目</li></ul></li><li>页面结构<ul><li>标题、页脚和导航</li><li>布局</li><li>其他页面结构元素</li></ul></li><li>页面组件<ul><li>各个页面</li></ul></li><li>覆盖</li></ul><p>这里用一种风格统一的大代码块分割以下部分：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* @group general styles</span></div><div class="line"><span class="comment">-----------------------------------------------------*/</span></div><div class="line"><span class="comment">/* @group helper styles</span></div><div class="line"><span class="comment">-----------------------------------------------------*/</span></div><div class="line"><span class="comment">/* @group page structure</span></div><div class="line"><span class="comment">-----------------------------------------------------*/</span></div><div class="line"><span class="comment">/* @group components</span></div><div class="line"><span class="comment">-----------------------------------------------------*/</span></div><div class="line"><span class="comment">/* @group overrides</span></div><div class="line"><span class="comment">-----------------------------------------------------*/</span></div></pre></td></tr></table></figure><h2 id="自我提示"><a href="#自我提示" class="headerlink" title="自我提示"></a>自我提示</h2><p>注释可以提醒你在启动前需要完成哪些工作，或者提醒你提供列宽度等常用值的查询表。<br>例如，我可以运用注释在开头添加一个小的颜色查询表：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">@colordef #434343; dark gray</span></div><div class="line"><span class="comment">@colordef #f2f6e4; light green</span></div><div class="line"><span class="comment">@colordef #90b11f; dark green</span></div><div class="line"><span class="comment">@colordef #369; dark blue</span></div><div class="line"><span class="comment">*/</span></div></pre></td></tr></table></figure><p>或者，运用 @todo 来表示某些东西需要在以后进行修改、修复或审查，用 @bugfix 表示代码或特定文件遇到的问题，用 @workaround 表示并不完善的权宜之计。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* :@todo Remember to remove this rule before the site goes live*/</span></div><div class="line"><span class="comment">/* @workaround: I managed to fix this problem in IE by setting a small negative margin but it's not pretty*/</span></div><div class="line"><span class="comment">/* @bugfix: Rule breaks in IE5.2 Mac*/</span></div></pre></td></tr></table></figure><h2 id="删除注释和优化样式表"><a href="#删除注释和优化样式表" class="headerlink" title="删除注释和优化样式表"></a>删除注释和优化样式表</h2><p>删除注释可以利用在线 CSS 优化器自动优化，或者使用自动化构建工具<br>优化样式表可以采用服务端压缩方法。<strong>如果使用 Apache 服务器，应该安装 mod_gzip 或 mod_deflate。</strong>所有现代浏览器都可以处理用 GZIP 压缩的文件并进行即时解压。这些 Apache 模块检测浏览器是否能处理这些文件，如果可以，就发送压缩过的版本。<strong>服务端压缩能将 HTML 和 CSS 文件减少大约 80% 。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;常用的选择器&quot;&gt;&lt;a href=&quot;#常用的选择器&quot; class=&quot;headerlink&quot; title=&quot;常用的选择器&quot;&gt;&lt;/a&gt;常用的选择器&lt;/h1&gt;&lt;p&gt;最常用的
      
    
    </summary>
    
      <category term="精通CSS-高级Web标准解决方案" scheme="http://yoursite.com/categories/%E7%B2%BE%E9%80%9ACSS-%E9%AB%98%E7%BA%A7Web%E6%A0%87%E5%87%86%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>响应式表格分析</title>
    <link href="http://yoursite.com/2017/09/28/%E5%93%8D%E5%BA%94%E5%BC%8F%E8%A1%A8%E6%A0%BC%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2017/09/28/响应式表格分析/</id>
    <published>2017-09-28T05:26:55.000Z</published>
    <updated>2017-09-28T16:09:32.758Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>深入分析课程：<strong>响应式表格 - 没有更多表格了</strong> 后，对源码的分析如下：</p><p>test123</p><p><br></p><p><strong>源代码</strong>:</p><iframe height="265" scrolling="no" title="RWDF L5 No More Tables" src="//codepen.io/Xeonice/embed/dVWNRy/?height=265&theme-id=0&default-tab=html,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/Xeonice/pen/dVWNRy/" target="_blank" rel="external">RWDF L5 No More Tables</a> by DouglasDong (<a href="https://codepen.io/Xeonice" target="_blank" rel="external">@Xeonice</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.<br></iframe><p><br></p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child(odd)</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#f9f9f9</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>使用了 nth-child(odd) 选择器对下标是奇数或偶数的 <code>&lt;tr&gt;</code> 进行选择，并设置其背景颜色为 <code>#f9f9f9</code> 。相关文档可参见 <a href="http://www.w3school.com.cn/cssref/selector_nth-child.asp" target="_blank" rel="external">CSS3 :nth-child() 选择器</a>。</p><p><br></p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">thead</span> <span class="selector-tag">tr</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: -<span class="number">9999px</span>;</div><div class="line">    <span class="attribute">left</span>: -<span class="number">9999px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当 <code>mediaQuery</code> 被触发时，使 DOM 树中的 thead，tr 元素移至浏览器可视窗口之外。不使用 <code>display: none</code> 的原因有两点：</p><ul><li>搜索引擎可能认为被隐藏的文字属于垃圾信息而被忽略，不为隐藏的对象保留物理占位空间。</li><li>会被屏幕阅读器所忽略。</li></ul><p><br></p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">td</span> &#123; </div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">padding-left</span>: <span class="number">50%</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当 <code>mediaQuery</code> 被触发时，设定 <code>padding-left</code> 为页面 <code>width</code> 的50%。</p><p><br></p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">td</span><span class="selector-pseudo">:before</span> &#123; </div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">left</span>: <span class="number">6px</span>;</div><div class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(data-th);</div><div class="line">    <span class="attribute">font-weight</span>: bold;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当 <code>mediaQuery</code> 被触发时，在 <code>td</code> 元素前设置文字，定位采用绝对定位，内容为 HTML 文档中 <code>data-th</code> 处的文字。详细文档可见 <a href="http://www.w3school.com.cn/cssref/selector_before.asp" target="_blank" rel="external">CSS :before 选择器</a> 。</p><p><br></p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">td</span><span class="selector-pseudo">:first-of-type</span> &#123;</div><div class="line">    <span class="attribute">font-weight</span>: bold;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当 <code>mediaQuery</code> 被触发时，设定 首个 <code>td</code> 元素的字重为 <code>bold</code> 。这里是指表格中的 <code>San Francisco</code> 与 <code>Toronto</code> 。 详细文档可见：  <a href="http://www.w3school.com.cn/cssref/selector_first-of-type.asp" target="_blank" rel="external">CSS3 :first-of-type 选择器</a> 。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;深入分析课程：&lt;strong&gt;响应式表格 - 没有更多表格了&lt;/strong&gt; 后，对源码的分析如下：&lt;/p&gt;
&lt;p&gt;test123&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>WodeXinBoke</title>
    <link href="http://yoursite.com/2017/09/25/WodeXinBoke/"/>
    <id>http://yoursite.com/2017/09/25/WodeXinBoke/</id>
    <published>2017-09-25T14:09:33.000Z</published>
    <updated>2017-09-28T05:39:35.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>DPlayer 与 Aplayer 插件的简单测试。<br><div id="dplayer0" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":0,"theme":"#FADFA3","loop":1,"video":{"url":"http://7xrad6.com1.z0.glb.clouddn.com/The%20Evil%20Within%202%20%E2%80%93%20Official%20E3%20Announce%20Trailer%20%28PEGI%29.mp4"}});</script><!-- dplayer used1 --><br><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer0"),narrow: false,autoplay: false,showlrc: 0,music: {title: "Clock",author: "Jeff Williams",url: "http://7xrad6.com1.z0.glb.clouddn.com/Clocks%20-%20Plaid.mp3",pic: "",}});</script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;DPlayer 与 Aplayer 插件的简单测试。&lt;br&gt;&lt;div id=&quot;dplayer0&quot; class=&quot;dplayer&quot; style=&quot;margin-bottom: 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>wodeboke</title>
    <link href="http://yoursite.com/2017/09/25/wodeboke/"/>
    <id>http://yoursite.com/2017/09/25/wodeboke/</id>
    <published>2017-09-25T08:57:32.000Z</published>
    <updated>2017-09-25T10:58:29.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>对 Hexo 博客系统进行测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">console.log(&apos;a&apos;);</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;对 Hexo 博客系统进行测试&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>text_my_site</title>
    <link href="http://yoursite.com/2017/09/25/text-my-site/"/>
    <id>http://yoursite.com/2017/09/25/text-my-site/</id>
    <published>2017-09-25T08:55:47.000Z</published>
    <updated>2017-09-25T08:55:47.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/09/25/hello-world/"/>
    <id>http://yoursite.com/2017/09/25/hello-world/</id>
    <published>2017-09-25T08:53:40.000Z</published>
    <updated>2017-09-25T08:53:40.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is 
      
    
    </summary>
    
    
  </entry>
  
</feed>
